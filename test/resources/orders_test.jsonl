{"name": "illegal_table", "sql": "SELECT * FROM users", "errors": ["Table users is not allowed"]}
{"name": "two_illegal_tables", "sql": "SELECT col1 FROM users AS u1, products AS p1", "errors": ["Table users is not allowed", "Table products is not allowed"]}
{"name": "select_no_legal_cols", "sql": "SELECT col1, col2 FROM orders WHERE id = 123", "errors": ["Column col1 is not allowed. Column removed from SELECT clause", "Column col2 is not allowed. Column removed from SELECT clause", "No legal elements in SELECT clause"]}
{"name": "select_star", "sql": "SELECT * FROM orders WHERE id = 123", "errors": ["SELECT * is not allowed"], "fix": "SELECT id, product_name, account_id FROM orders WHERE id = 123", "data": [[123, "product1", 123]]}
{"name": "two_cols", "sql": "SELECT id, product_name FROM orders WHERE id = 123", "errors": [], "data": [[123, "product1"]]}
{"name": "quote_and_alias", "sql": "SELECT \"id\" AS my_id FROM orders WHERE id = 123", "errors": [], "data": [[123]]}
{"name": "sql_with_group_by_and_order_by", "sql": "SELECT id FROM orders GROUP BY id ORDER BY id", "errors": ["Missing restriction for table: orders column: id value: 123"], "fix": "SELECT id FROM orders WHERE id = 123 GROUP BY id ORDER BY id", "data": [[123]]}
{"name": "sql_with_where_and_group_by_and_order_by", "sql": "SELECT id FROM orders WHERE product_name='' GROUP BY id ORDER BY id", "errors": ["Missing restriction for table: orders column: id value: 123"], "fix": "SELECT id FROM orders WHERE ( product_name='') AND id = 123 GROUP BY id ORDER BY id"}
{"name": "col_expression", "sql": "SELECT col + 1 FROM orders WHERE id = 123", "errors": ["Column col is not allowed. Column removed from SELECT clause", "No legal elements in SELECT clause"]}
{"name": "select_illegal_col", "sql": "SELECT col, id FROM orders WHERE id = 123", "errors": ["Column col is not allowed. Column removed from SELECT clause"], "fix": "SELECT id FROM orders WHERE id = 123"}
{"name": "missing_restriction", "sql": "SELECT id FROM orders", "errors": ["Missing restriction for table: orders column: id value: 123"], "fix": "SELECT id FROM orders WHERE id = 123"}
{"name": "wrong_restriction", "sql": "SELECT id FROM orders WHERE id = 234", "errors": ["Missing restriction for table: orders column: id value: 123"], "fix": "SELECT id FROM orders WHERE ( id = 234) AND id = 123"}
{"name": "table_and_database", "sql": "SELECT id FROM orders_db.orders AS o WHERE id = 123", "errors": [], "data": [[123]]}
{"name": "function_call", "sql": "SELECT COUNT(DISTINCT id) FROM orders_db.orders AS o WHERE id = 123", "errors": [], "data": [[1]]}
{"name": "function_call_illegal_col", "sql": "SELECT COUNT(DISTINCT col) FROM orders_db.orders AS o WHERE id = 123", "errors": ["Column col is not allowed. Column removed from SELECT clause", "No legal elements in SELECT clause"]}
{"name": "table_prefix", "sql": "SELECT o.id FROM orders AS o WHERE id = 123", "errors": [], "data": [[123]]}
{"name": "table_and_db_prefix", "sql": "SELECT orders_db.orders.id FROM orders_db.orders WHERE orders_db.orders.id = 123", "errors": [], "data": [[123]]}
{"name": "table_alias", "sql": "SELECT a.id FROM orders_db.orders AS a WHERE a.id = 123", "errors": [], "data": [[123]]}
{"name": "bad_restriction", "sql": "SELECT id FROM orders WHERE id = 123 OR id = 234", "errors": ["Missing restriction for table: orders column: id value: 123"], "fix": "SELECT id FROM orders WHERE ( id = 123 OR id = 234) AND id = 123"}
{"name": "bracketed", "sql": "SELECT id FROM orders WHERE (id = 123)", "errors": [], "data": [[123]]}
{"name": "double_bracketed", "sql": "SELECT id FROM orders WHERE ((id = 123))", "errors": [], "data": [[123]]}
{"name": "static_exp", "sql": "SELECT id FROM orders WHERE id = 123 OR (1 = 1)", "errors": ["Static expression is not allowed"]}
{"name": "nested_static_exp", "sql": "SELECT id FROM orders WHERE id = 123 OR (id = 1 OR TRUE)", "errors": ["Static expression is not allowed"]}
{"name": "nested_static_exp", "sql": "SELECT id FROM orders WHERE id = 123 AND (product_name = 'product1' OR (TRUE))", "errors": ["Static expression is not allowed"]}
{"name": "multiple_brackets_exp", "sql": "SELECT id FROM orders WHERE (( ( (id = 123))))", "errors": [], "data": [[123]]}
{"name": "with_clause", "sql": "WITH data AS (SELECT id FROM orders WHERE id = 123) SELECT id FROM data", "errors": [], "data": [[123]]}
{"name": "nested_with_clause", "sql": "WITH data AS (WITH sub_data AS (SELECT id FROM orders) SELECT id FROM sub_data) SELECT id FROM data", "errors": ["Missing restriction for table: orders column: id value: 123"], "fix": "WITH data AS (WITH sub_data AS (SELECT id FROM orders WHERE id = 123) SELECT id FROM sub_data) SELECT id FROM data"}
{"name": "nested_with_clause", "sql": "WITH data AS (WITH sub_data AS (SELECT id FROM orders WHERE id = 123) SELECT id FROM sub_data) SELECT id FROM data", "errors": [], "data": [[123]]}
{"name": "with_clause_missing_restriction", "sql": "WITH data AS (SELECT id FROM orders) SELECT id FROM data", "errors": ["Missing restriction for table: orders column: id value: 123"], "fix": "WITH data AS (SELECT id FROM orders WHERE id = 123) SELECT id FROM data"}
{"name": "lowercase", "sql": "with data as (select id from orders as o where id = 123) select id from data", "errors": [], "data": [[123]]}
{"name": "sub_select", "sql": "SELECT id, sub_select.col FROM orders CROSS JOIN (SELECT 1 AS col) AS sub_select WHERE id = 123", "errors": [], "data": [[123, 1]]}
{"name": "sub_select_expression", "sql": "SELECT id, 1 + (1 + sub_select.col) FROM orders CROSS JOIN (SELECT 1 AS col) AS sub_select WHERE id = 123", "errors": [], "data": [[123, 3]]}
{"name": "sub_select_access_col_without_prefix", "sql": "SELECT id, col FROM orders CROSS JOIN (SELECT 1 AS col) AS sub_select WHERE id = 123", "errors": ["Column col is not allowed. Column removed from SELECT clause"], "fix": "SELECT id FROM orders CROSS JOIN (SELECT 1 AS col) AS sub_select WHERE id = 123"}
{"name": "cast", "sql": "SELECT id FROM orders WHERE id = 123 AND CAST(product_name AS VARCHAR) = 'product1'", "errors": [], "data": [[123]]}
{"name": "case_when", "sql": "SELECT CASE WHEN id = 123 THEN 111 ELSE FALSE END FROM orders WHERE id = 123", "errors": [], "data": [[111]]}
{"name": "not_allowed_column", "sql": "SELECT id, not_allowed FROM orders WHERE id = 123", "errors": ["Column not_allowed is not allowed. Column removed from SELECT clause"], "fix": "SELECT id FROM orders WHERE id = 123" ,"data": [[123]]}
{"name": "not_allowed_column_brackets_1", "sql": "SELECT (id, not_allowed) FROM orders WHERE id = 123", "errors": ["Column not_allowed is not allowed. Column removed from SELECT clause", "No legal elements in SELECT clause"]}
{"name": "not_allowed_column_brackets_2", "sql": "SELECT (id, not_allowed), product_name FROM orders WHERE id = 123", "errors": ["Column not_allowed is not allowed. Column removed from SELECT clause"], "fix": "SELECT product_name FROM orders WHERE id = 123", "data": [["product1"]]}